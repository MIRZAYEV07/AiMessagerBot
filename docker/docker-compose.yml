
services:
  telegram-ai-bot:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: telegram-ai-bot
    env_file:
      - ../.env
    volumes:
      - ..:/app/
      - bot_data:/app/data
      - bot_logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: telegram_bot
      POSTGRES_USER: botuser
      POSTGRES_PASSWORD: botpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bot_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U botuser -d telegram_bot" ]
      interval: 10s
      timeout: 5s
      retries: 5


  redis:
    image: redis:7-alpine
    container_name: telegram-bot-redis
    volumes:
      - redis_data:/data
    networks:
      - bot_network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  bot_data:
  bot_logs:
  redis_data:

networks:
  bot_network: